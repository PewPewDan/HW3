california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "lightblue") +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradientn(values =rescale(c(0,20000,25000,30000,200000)) +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values =rescale(c(0,20000,25000,30000,200000)) +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values = rescale(c(0,20000,25000,30000,200000)) +
colours=c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradientn(values = rescale(c(0,20000,25000,30000,200000)) +
colours=c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values = rescale(c(0,20000,25000,30000,200000)) +
colours = c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values = rescale(c(0,20000,25000,30000,200000)) +
colours <- c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values = rescale(c(0,20000,25000,30000,200000)) +
colours = c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_colour_gradient(values = rescale(c(0,20000,25000,30000,200000)) +
c('yellow3','darkblue'),labels = comma)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
ca_data <- map_data("state", region = "california")
california_map <- ggplot(ca_data, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "grey50", color = "white") +
theme_void()
colnames(CAH)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue = CAH[c(1,2,9)]
california_MedianHouseValue <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue, aes(x = long, y = lat, fill = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue
view(CAH_MedianHouseValue_test)
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
CAH_MedianHouseValue_test %>%
mutate(mutate(value_predrf = predict(CAH_boost3, CAH_test,n.trees - 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
CAH_MedianHouseValue_test %>%
mutate(mutate(value_predrf = predict(CAH_boost3, CAH_test,n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
colnames(CAH_test)[c(1, 2)] <- c("longitude", "latitude")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("longitude", "latitude")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = longitude, y = latitude, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
colnames(CAH_boost3)[c(1, 2)] <- c("long", "lat")
View(CAH_boost2)
View(CAH_boost3)
CAH_MedianHouseValue_test %>%
mutate(mutate(value_predrf = predict(CAH_boost3, CAH_test,n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
#Creating variables demonstrating averages of statistics per household
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
View(CAH)
#Creating variables demonstrating averages of statistics per household
colnames(CAH_)[c(1, 2)] <- c("long", "lat")
#Creating variables demonstrating averages of statistics per household
colnames(CAH)[c(1, 2)] <- c("long", "lat")
CAH <- CAhousing %>%
mutate(avg_rooms = totalRooms/households,
avg_bedrooms = totalBedrooms/households,
avg_house_pop = population/households)
#split data
CAH_split = initial_split(CAH)
CAH_train = training(CAH_split)
CAH_test = testing(CAH_split)
CAH_forest = randomForest(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + longitude
+ latitude, data = CAH_train,
importance = TRUE)
# shows out-of-bag MSE as a function of the number of trees used
plot(CAH_forest)
#Forest Prediction for price given location
partialPlot(CAH_forest, as.data.frame(CAH_test), longitude, las=1)
partialPlot(CAH_forest, as.data.frame(CAH_test), latitude, las=1)
CAH_train_split = initial_split(CAH_train)
CAH_boost_build = training(CAH_train_split)
CAH_boost_check = testing(CAH_train_split)
CAH_boost1 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + longitude
+ latitude, data = CAH_boost_build,
interaction.depth=11, n.trees=1000, shrinkage=.08)
CAH_boost2 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + longitude
+ latitude, data = CAH_boost_build,
interaction.depth=14, n.trees=1000, shrinkage=.08)
CAH_boost3 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + longitude
+ latitude, data = CAH_train,
interaction.depth=12, n.trees=1000, shrinkage=.08)
rmse(CAH_boost1, CAH_boost_check)
rmse(CAH_boost2, CAH_boost_check)
rmse(CAH_boost3, CAH_boost_check)
p1 = pdp::partial(CAH_boost3, pred.var = 'longitude', n.trees=1000)
ggplot(p1) + geom_point(mapping=aes(x=longitude, y=yhat))
p2 = pdp::partial(CAH_boost3, pred.var = 'latitude', n.trees=1000)
ggplot(p2) + geom_point(mapping=aes(x=latitude, y=yhat))
CAH_lm = lm(data = CAH_train, medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + longitude
+ latitude )
CAH_stepwise = stepAIC(CAH_lm, direction = "both",
trace = FALSE)
summary(CAH_stepwise)
rmse(CAH_boost3, CAH_test)
rmse(CAH_forest, CAH_test)
rmse(CAH_lm, CAH_test)
ca_data <- map_data("state", region = "california")
california_map <- ggplot(ca_data, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "grey50", color = "white") +
theme_void()
colnames(CAH)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue = CAH[c(1,2,9)]
california_MedianHouseValue <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue, aes(x = long, y = lat, fill = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
CAH_MedianHouseValue_test %>%
mutate(mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
#Creating variables demonstrating averages of statistics per household
colnames(CAH)[c(1, 2)] <- c("long", "lat")
CAH <- CAhousing %>%
mutate(avg_rooms = totalRooms/households,
avg_bedrooms = totalBedrooms/households,
avg_house_pop = population/households)
#split data
CAH_split = initial_split(CAH)
CAH_train = training(CAH_split)
CAH_test = testing(CAH_split)
CAH_forest = randomForest(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_train,
importance = TRUE)
View(CAH)
#Creating variables demonstrating averages of statistics per household
colnames(CAH)[c(1, 2)] <- c("long", "lat")
View(CAH)
#Creating variables demonstrating averages of statistics per household
colnames(CAhousing)[c(1, 2)] <- c("long", "lat")
View(CAhousing)
#Creating variables demonstrating averages of statistics per household
colnames(CAhousing)[c(1, 2)] <- c("long", "lat")
CAH <- CAhousing %>%
mutate(avg_rooms = totalRooms/households,
avg_bedrooms = totalBedrooms/households,
avg_house_pop = population/households)
#split data
CAH_split = initial_split(CAH)
CAH_train = training(CAH_split)
CAH_test = testing(CAH_split)
CAH_forest = randomForest(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_train,
importance = TRUE)
# shows out-of-bag MSE as a function of the number of trees used
plot(CAH_forest)
#Forest Prediction for price given location
partialPlot(CAH_forest, as.data.frame(CAH_test), longitude, las=1)
#Creating variables demonstrating averages of statistics per household
colnames(CAhousing)[c(1, 2)] <- c("long", "lat")
CAH <- CAhousing %>%
mutate(avg_rooms = totalRooms/households,
avg_bedrooms = totalBedrooms/households,
avg_house_pop = population/households)
#split data
CAH_split = initial_split(CAH)
CAH_train = training(CAH_split)
CAH_test = testing(CAH_split)
CAH_forest = randomForest(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_train,
importance = TRUE)
# shows out-of-bag MSE as a function of the number of trees used
plot(CAH_forest)
#Forest Prediction for price given location
partialPlot(CAH_forest, as.data.frame(CAH_test), long, las=1)
partialPlot(CAH_forest, as.data.frame(CAH_test), lat, las=1)
CAH_train_split = initial_split(CAH_train)
CAH_boost_build = training(CAH_train_split)
CAH_boost_check = testing(CAH_train_split)
CAH_boost1 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_boost_build,
interaction.depth=11, n.trees=1000, shrinkage=.08)
CAH_boost2 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_boost_build,
interaction.depth=14, n.trees=1000, shrinkage=.08)
CAH_boost3 = gbm(medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat, data = CAH_train,
interaction.depth=12, n.trees=1000, shrinkage=.08)
rmse(CAH_boost1, CAH_boost_check)
rmse(CAH_boost2, CAH_boost_check)
rmse(CAH_boost3, CAH_boost_check)
p1 = pdp::partial(CAH_boost3, pred.var = 'long', n.trees=1000)
ggplot(p1) + geom_point(mapping=aes(x=long, y=yhat))
p2 = pdp::partial(CAH_boost3, pred.var = 'lat', n.trees=1000)
ggplot(p2) + geom_point(mapping=aes(x=lat, y=yhat))
CAH_lm = lm(data = CAH_train, medianHouseValue ~ housingMedianAge + medianIncome +
avg_rooms + avg_bedrooms + avg_house_pop + long
+ lat )
CAH_stepwise = stepAIC(CAH_lm, direction = "both",
trace = FALSE)
summary(CAH_stepwise)
rmse(CAH_boost3, CAH_test)
rmse(CAH_forest, CAH_test)
rmse(CAH_lm, CAH_test)
ca_data <- map_data("state", region = "california")
california_map <- ggplot(ca_data, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "grey50", color = "white") +
theme_void()
colnames(CAH)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue = CAH[c(1,2,9)]
california_MedianHouseValue <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue, aes(x = long, y = lat, fill = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
CAH_MedianHouseValue_test %>%
mutate(mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
CAH_MedianHouseValue_test %>%
mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2))
CAH_MedianHouseValue_test %>%
mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2)
CAH_MedianHouseValue_test %>%
mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2) %>%
mutate(sqpred_errorrf=sqrt(pred_errorrf))
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predrf = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorrf=(medianHouseValue-value_predrf)^2) %>%
mutate(sqpred_errorrf=sqrt(pred_errorrf))
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errogbm=(medianHouseValue-value_predgbm)^2) %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errogbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Error/Risidual Map", fill = "Median House Value")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 0.1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 2) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient() +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 1) +
scale_fill_gradient(low = "lightblue", high = "red") +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
colnames(CAH_test)[c(1, 2)] <- c("long", "lat")
CAH_MedianHouseValue_test = CAH_test[c(1,2,9)] %>%
mutate(ln_medianHouseValue = log(medianHouseValue))
california_MedianHouseValue_GBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = medianHouseValue), alpha = 1) +
scale_fill_gradient(low = "blue", high = "red") +
coord_equal() +
labs(title = "Predictive California Median House Value Map", fill = "Median House Value")
california_MedianHouseValue_GBM
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(value_predgbm = predict(CAH_boost3, CAH_test, n.trees = 1000),pred_errorgbm=(medianHouseValue-value_predgbm)^2)
CAH_MedianHouseValue_test = CAH_MedianHouseValue_test %>%
mutate(sqpred_errorgbm=sqrt(pred_errorgbm))
california_MedianHouseValue_ErrorGBM <- ggplot() +
geom_polygon(data = ca_data, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_tile(data = CAH_MedianHouseValue_test, aes(x = long, y = lat, color = sqpred_errorgbm), alpha = 0.4) +
scale_fill_gradient(low = "lightblue", high = "red") +
coord_equal() +
labs(title = "Error/Residual Map")
california_MedianHouseValue_ErrorGBM
